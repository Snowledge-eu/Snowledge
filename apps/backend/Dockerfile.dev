FROM node:lts-slim AS base

RUN npm install -g npm@latest @nestjs/cli

FROM base AS prune
# RUN apk update
# RUN apk add --no-cache libc6-compat
WORKDIR /app
RUN npm install turbo --global
COPY . .
RUN turbo prune backend --docker

FROM base AS installer
# RUN apk update
# RUN apk add --no-cache libc6-compat
WORKDIR /app
# Copier les fichiers de dépendances
COPY --from=prune /app/out/json/ .
COPY apps/backend/package*.json ./
# Installer NestJS CLI globalement
RUN npm install

# Copier le reste du code source
COPY --from=prune /app/out/full/ .
COPY turbo.json turbo.json

RUN npx turbo run build --filter=backend^... --no-cache

FROM base AS runner
# RUN apk add --no-cache curl bash binutils && curl -Lo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub curl -Lo glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk && apk add --no-cache glibc.apk && rm -f glibc.apk
WORKDIR /app

COPY --from=installer /app .

# Exposer le port
EXPOSE 4000

# Commande de démarrage
CMD ["npm", "run", "dev"]