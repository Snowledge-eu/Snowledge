name: Deploy Frontend

on:
  push:
    branches:
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/snowledge-v1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Deploy migrations to Preview
        if: github.ref == 'refs/heads/staging'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.PREVIEW_DATABASE_URL }}

      - name: Deploy migrations to Production
        if: github.ref == 'refs/heads/main'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/snowledge-v1

  build-and-deploy-docker:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip docker]') }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (frontend)
        run: |
          cd apps/frontend
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

      - name: Build and push Docker image (backend)
        run: |
          cd ../../apps/backend
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/monapp-backend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/monapp-backend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

      - name: Deploy frontend via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_HOST || secrets.STAGING_HOST }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.PROD_USER || secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
            docker stop monapp-frontend || true
            docker rm monapp-frontend || true
            docker run -d -p 80:3000 --name monapp-frontend ${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

      - name: Deploy backend via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_HOST || secrets.STAGING_HOST }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.PROD_USER || secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/monapp-backend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
            docker stop monapp-backend || true
            docker rm monapp-backend || true
            docker run -d -p 4000:4000 --name monapp-backend ${{ secrets.DOCKER_USERNAME }}/monapp-backend:${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
