name: Deploy Frontend

on:
  push:
    branches:
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/snowledge-v1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Deploy migrations to Preview
        if: github.ref == 'refs/heads/staging'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.PREVIEW_DATABASE_URL }}

      - name: Deploy migrations to Production
        if: github.ref == 'refs/heads/main'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/snowledge-v1

  deploy-ovh:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Déploiement sur OVH (staging)
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ ! -d "/home/debian/Snowledge/.git" ]; then
              git clone https://github.com/Snowledge-eu/Snowledge.git /home/debian/Snowledge
            fi
            cd /home/debian/Snowledge
            git fetch origin
            git checkout staging
            git pull origin staging
            docker compose -f docker-compose.prod.yml up -d --build

      - name: Déploiement sur OVH (prod)
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ ! -d "/home/debian/Snowledge/.git" ]; then
              git clone https://github.com/Snowledge-eu/Snowledge.git /home/debian/Snowledge
            fi
            cd /home/debian/Snowledge
            git fetch origin
            git checkout main
            git pull origin main
            docker compose -f docker-compose.prod.yml up -d --build
