version: "3"

services:
  # Service pour l'application principale (snowledge-v1)
  # snowledge-v1:
  #   build:
  #     context: ./apps/snowledge-v1
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3005:3005
  #   volumes:
  #     - ./apps/snowledge-v1/.env:/app/.env
  #   environment:
  #     - NODE_ENV=development
  #   working_dir: /app
  #   command: npm run dev
  #   restart: unless-stopped
  #   networks:
  #     - snowledge_network
  # Service pour le frontend
  frontend:
    build:
      context: .
    ports:
      - 3000:3000
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - snowledge_network
  # Service pour le backend
  backend:
    build:
      context: .
    ports:
      - 4000:4000
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - snowledge_network
  # Service PostgreSQL
  postgres:
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-snowledge}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backup:/backup
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
networks:
  snowledge_network:
    external: true
