version: "3"

services:
  # Service pour le frontend
  frontend:
    # volumes:
    #   - ./.env:/app/apps/frontend/.env # <-- Ajoute cette ligne
    build:
      dockerfile: ./apps/frontend/Dockerfile.prod
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - NODE_ENV=production
  # Service pour le backend
  backend:
    volumes:
      - ./pg-ca.crt:/etc/ssl/certs/pg-ca.crt
    build:
      dockerfile: ./apps/backend/Dockerfile.prod
    env_file:
      - .env
    environment:
      - APP_PORT=4000
      - NODE_ENV=production
      - SWAGGER=
      - COOKIE_DOMAIN=snowledge.eu
      - DISCORD_CLIENT_ID=1377545849126518784
      - MG_NAME=social_data #INutile je crois
      - MG_HOST=mongo
      - MG_PORT=27017
      - MG_DB=snowledge
      - ORIGIN_CORS= ["https://hi.snowledge.eu"]
      - NODE_EXTRA_CA_CERTS=/etc/ssl/certs/pg-ca.crt
      - PGSQL_HOST=postgresql-cb7f0186-o9835f167.database.cloud.ovh.net
      - PGSQL_PORT=20184
      - PGSQL_DB=defaultdb
      - PGSQL_SSL=true
      - BACK_URL=https://hi.snowledge.eu/api
      - FRONT_URL=https://hi.snowledge.eu
      - ORIGIN_CORS= ["https://hi.snowledge.eu"]

  discord-harvester:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile.dev
    command: npm run start:harvest
    depends_on:
      - backend
      - mongo
    volumes:
      # Monter le code source en prÃ©servant node_modules
      - ./apps/backend:/app
      - /app/node_modules
      - ./apps/backend/.env:/app/.env
    environment:
      - NODE_ENV=production
      - MG_NAME=social_data
      - MG_HOST=mongo
      - MG_PORT=27017
    networks:
      - snowledge_network

networks:
  snowledge_network:
    external: true
